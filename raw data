import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline

def load_data(file_path):
    """
    Load data from CSV file.

    Parameters:
    file_path (str): Path to the CSV file.

    Returns:
    pd.DataFrame: Loaded DataFrame.
    """
    return pd.read_csv(file_path)

def preprocess_data(data):
    """
    Preprocess the raw data.

    Parameters:
    data (pd.DataFrame): Input DataFrame.

    Returns:
    pd.DataFrame: Preprocessed DataFrame.
    """
    # Separate features and target variable
    X = data.drop(columns=['target_column'])
    y = data['target_column']
    
    # Define preprocessing steps
    numeric_features = ['numeric_column1', 'numeric_column2']
    categorical_features = ['categorical_column']
    
    numeric_transformer = Pipeline(steps=[
        ('imputer', SimpleImputer(strategy='median')),
        ('scaler', StandardScaler())])
    
    categorical_transformer = Pipeline(steps=[
        ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),
        ('onehot', OneHotEncoder(handle_unknown='ignore'))])
    
    preprocessor = ColumnTransformer(
        transformers=[
            ('num', numeric_transformer, numeric_features),
            ('cat', categorical_transformer, categorical_features)])
    
    # Apply preprocessing
    preprocessed_data = preprocessor.fit_transform(X)
    
    return preprocessed_data, y
